include ../logo/logo
include ../button/button

mixin header(options = {})
  -
    let boldItemClass = 'header__list-bold-item';
    boldItemClass += options.isBoldItem ? '' : ' header__list-bold-item_font_normal';

    const items = [
      ['О нас', []],
      ['Услуги', ['Ресторан', 'Бассейн', 'Транспорт']],
      ['Вакансии', []],
      ['Новости', []],
      ['Соглашения', ['Договор по оказанию услуг', 'Договор хранения']]
    ];

  .header.js-header
    header.header__container.js-header__container
      .header__wrapper
        +logo({isColorful: true})
        .header__burger-container.js-header__burger-container
          .header__burger.js-header__burger
        .header__right-block-container
          nav.header__nav
            ul.header__menu-list

              each item in items
                if item[1].length
                  li.header__list-item.header__list-item_expandable.js-header__list-item_expandable
                    a.header__list-link.js-header__list-link(
                      href="/mock-address/change-me"
                      )
                      span.header__list-link-text=item[0]
                      .header__list-arrow.js-header__list-arrow

                    .header__expanded-menu.js-header__expanded-menu
                      ul.header__expanded-menu-list
                        each val in item[1]
                          li.header__expanded-menu-item
                            a.header__expanded-menu-link(
                              href="/mock-address/change-me"
                              )=val
                else
                  li.header__list-item
                    a.header__list-link.js-header__list-link(
                      href="/mock-address/change-me"
                      )
                      span(class=boldItemClass)=item[0]

          if (options.isLoggedIn)
            span.header__user-name!=options.userName
          else
            .header__buttons-container
              +button({
                emptyButton: true,
                text: 'Войти',
                href: 'registration-and-sign-in.html?page=entry'
                })
              +button({
                filledButton: true,
                text: 'Зарегистрироваться',
                size: 'L',
                href: 'registration-and-sign-in.html'
                })

    .mobile-menu.js-mobile-menu
      .mobile-menu__buttons-container
        .mobile-menu__button-container
          +button({
            emptyButton: true,
            text: 'Войти',
            href: 'registration-and-sign-in.html?page=entry'
            })
        .mobile-menu__button-container
          +button({
            filledButton: true,
            text: 'Зарегистрироваться',
            size: 'L',
            href: 'registration-and-sign-in.html'
            })
      nav.mobile-menu__nav
        ul.mobile-menu__list
          each item in items
            if item[1].length
              li.mobile-menu__list-item
                a.mobile-menu__list-link.js-mobile-menu__list-link_expandable(
                  href="/mock-address/change-me"
                  )
                  span.mobile-menu__list-bold-item=item[0]
                  .mobile-menu__list-arrow.js-mobile-menu__list-arrow
                ul.mobile-menu__expanded-list.js-mobile-menu__expanded-list
                  each val in item[1]
                    li.mobile-menu__expanded-list-item
                      a.mobile-menu__expanded-list-link.js-mobile-menu__list-link(
                        href="/mock-address/change-me"
                        )=val
            else
              li.mobile-menu__list-item
                a.mobile-menu__list-link.js-mobile-menu__list-link(
                  href="/mock-address/change-me"
                  )
                  span.mobile-menu__list-bold-item=item[0]

    .scrim