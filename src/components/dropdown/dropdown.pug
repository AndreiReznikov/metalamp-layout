include ~components/button/button

mixin dropdown(options = {})
  -
    let className = 'dropdown__wrapper js-dropdown__wrapper';
    className += options.isOpened ? ' dropdown__wrapper_opened' : '';
    className += options.isGuests ? ' dropdown__wrapper_guests js-dropdown__wrapper_guests' : '';
    className += options.isConveniences ? ' dropdown__wrapper_conveniences js-dropdown__wrapper_conveniences' : '';
    className += options.size === 'S' ? ' dropdown__wrapper_size_s' : '';

    const buttons = [
      ['dropdown__clear-button js-dropdown__clear-button', 'Очистить'],
      ['dropdown__apply-button js-dropdown__apply-button', 'Применить'],
    ];

  .dropdown.js-dropdown
    if options.title
      h3.dropdown__title=options.title
    div(
        class=className
        data-clicks=options.clicksNum
        data-buttons=options.buttonsNum
      )
      .dropdown__selection-container.js-dropdown__selection-container
        output.dropdown__selection.js-dropdown__selection
        .dropdown__arrow-container
          span.dropdown__arrow
      .dropdown__menu.js-dropdown__menu
        - let i = 0;
          while i < options.items.length
            - i += 1
            .dropdown__option.js-dropdown__option(data-id=`${i}`)
              span.dropdown__item
                = options.items[i-1]
          if options.addingButtons
            .dropdown__buttons-container
              each button in buttons
                - const [ className, value ] = button;
                span(class=className)
                  +button({
                    borderlessButton: true,
                    text: value,
                  })
